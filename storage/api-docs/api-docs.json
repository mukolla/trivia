{
    "openapi": "3.0.0",
    "info": {
        "title": "Simple API application for experiment with PHP and Laravel",
        "description": "\n *     Materials:\n *     - https://developer.okta.com/blog/2018/10/23/php-laravel-angular-crud-app#why-use-okta-for-authentication\n *     - https://ivankolodiy.medium.com/how-to-write-swagger-documentation-for-laravel-api-tips-examples-5510fb392a94\n *     - https://ikolodiy.com/posts/laravel-swagger-tips-examples\n *     - https://www.digitalocean.com/community/tutorials/how-to-set-up-laravel-nginx-and-mysql-with-docker-compose\n *     - https://techsolutionstuff.com/post/laravel-8-socialite-login-with-google-account\n *     - https://codyrigg.medium.com/how-to-add-a-google-login-using-socialite-on-laravel-8-with-jetstream-6153581e7dc9\n *     - https://blog.ithillel.ua/articles/oauth-2-0-autentifikaciya-cerez-google-yak-realizuvati-vxid-cerez-google-na-saiti\n *     - https://laravel.su/docs/8.x/authentication#starter-kits\n *     - https://laravel.su/docs/8.x/authorization\n *     ",
        "contact": {
            "email": "mukolla@gmail.com"
        },
        "version": "1.0.0"
    },
    "paths": {
        "/api/auth/login": {
            "post": {
                "tags": [
                    "Authentication"
                ],
                "summary": "User login",
                "operationId": "8dcb70df1020986038d098cc08d05dae",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "email": {
                                        "description": "User email",
                                        "type": "string",
                                        "example": "user@example.com"
                                    },
                                    "password": {
                                        "description": "User password",
                                        "type": "string",
                                        "example": "password"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful login",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "access_token": {
                                            "description": "JWT access token",
                                            "type": "string",
                                            "example": "eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJzdWIiOjEsImlzcyI6Imh0dHA6L2xvY2FsaG9zdDo4MDAwL2FwaS9sb2dpbiIsImlhdCI6MTYzMjI0MTU5NCwiZXhwIjoxNjMyMjQ1MTk0LCJuYmYiOjE2MzIyNDE1OTQsImp0aSI6ImhTR1kwZk1KNUVyTGFyX2sifQ.uUEy3Sbp8SvJU6yC8zGckUOvbeVOG0IUPxHp3eW3f0g"
                                        },
                                        "token_type": {
                                            "description": "Type of the token",
                                            "type": "string",
                                            "example": "bearer"
                                        },
                                        "expires_in": {
                                            "description": "Token expiration time in seconds",
                                            "type": "integer",
                                            "example": "3600"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "description": "Error message",
                                            "type": "string",
                                            "example": "Unauthorized"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/auth/web/login": {
            "post": {
                "tags": [
                    "Authentication"
                ],
                "summary": "User login",
                "operationId": "c671516d0fceddc3bd016751e4687cfb",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "email": {
                                        "description": "User email",
                                        "type": "string",
                                        "example": "user@example.com"
                                    },
                                    "password": {
                                        "description": "User password",
                                        "type": "string",
                                        "example": "password"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful login",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "token_type": {
                                            "description": "Type of the token",
                                            "type": "string",
                                            "example": "bearer"
                                        },
                                        "expires_in": {
                                            "description": "Token expiration time in seconds",
                                            "type": "integer",
                                            "example": "3600"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "description": "Error message",
                                            "type": "string",
                                            "example": "Unauthorized"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/auth/logout": {
            "post": {
                "tags": [
                    "Authentication"
                ],
                "summary": "User logout",
                "description": "Log the user out (Invalidate the token).",
                "operationId": "69281b12abb272c76871f19cb17ca563",
                "responses": {
                    "200": {
                        "description": "Successful logout",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "description": "Logout success message",
                                            "type": "string",
                                            "example": "Successfully logged out"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/auth/refresh": {
            "post": {
                "tags": [
                    "Authentication"
                ],
                "summary": "Refresh JWT token",
                "description": "Refresh a token.",
                "operationId": "b2eae7a8032954d25b46c7ec6f489c68",
                "responses": {
                    "200": {
                        "description": "Successful token refresh",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "access_token": {
                                            "description": "New JWT access token",
                                            "type": "string",
                                            "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIxMjM0NTY3ODkwIiwibmFtZSI6IkpvaG4gRG9lIiwiaWF0IjoxNTE2MjM5MDIyfQ.SflKxwRJSMeKKF2QT4fwpMeJf36POk6yJV_adQssw5c"
                                        },
                                        "token_type": {
                                            "description": "Token type",
                                            "type": "string",
                                            "example": "bearer"
                                        },
                                        "expires_in": {
                                            "description": "Token expiration time in seconds",
                                            "type": "integer",
                                            "example": 3600
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/players": {
            "get": {
                "tags": [
                    "Players"
                ],
                "summary": "Get all players",
                "description": "Retrieve a list of all players",
                "operationId": "a355f9879160729f824bdea53e739b05",
                "responses": {
                    "200": {
                        "description": "Players list",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/Player"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                }
            },
            "post": {
                "tags": [
                    "Players"
                ],
                "summary": "Create a new player",
                "description": "Create a new player with name, answers, and points",
                "operationId": "4e2752a0305de0adfa2a8c9ac1aa37a9",
                "requestBody": {
                    "description": "Data of a new player",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "name"
                                ],
                                "properties": {
                                    "name": {
                                        "description": "Player name",
                                        "type": "string",
                                        "example": "John"
                                    },
                                    "answers": {
                                        "description": "Number of correct answers",
                                        "type": "integer",
                                        "example": "10"
                                    },
                                    "points": {
                                        "description": "Number of points earned",
                                        "type": "integer",
                                        "example": "100"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Successful creation of a new player",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "properties": {
                                                "player": {
                                                    "$ref": "#/components/schemas/Player"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Invalid request data",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "description": "Error message",
                                            "type": "string",
                                            "example": "The given data was invalid."
                                        },
                                        "errors": {
                                            "description": "Object with errors for each invalid field",
                                            "type": "object",
                                            "example": {
                                                "name": [
                                                    "The name field is required."
                                                ],
                                                "points": [
                                                    "The points must be an integer."
                                                ]
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/players/{id}": {
            "get": {
                "tags": [
                    "Players"
                ],
                "summary": "Get a single player",
                "description": "Returns a single player by ID",
                "operationId": "getPlayerById",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the player to return",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "$ref": "#/components/schemas/Player"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Player not found"
                    }
                }
            }
        },
        "/api/players/{id}/answer": {
            "post": {
                "tags": [
                    "Players"
                ],
                "summary": "Submit an answer for a player",
                "description": "Submit a player's answer and calculate the points earned based on whether it was correct or not.",
                "operationId": "answer",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The ID of the player",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "requestBody": {
                    "description": "The request body contains the player's answer.",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "correct"
                                ],
                                "properties": {
                                    "correct": {
                                        "description": "Whether the player's answer was correct or not.",
                                        "type": "boolean",
                                        "example": true
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/Player"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Player not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Player not found."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/players/{id}": {
            "delete": {
                "tags": [
                    "Players"
                ],
                "summary": "Delete player by ID",
                "description": "Delete a player record by its ID",
                "operationId": "deletePlayerById",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The ID of the player",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Player record deleted successfully"
                    },
                    "404": {
                        "description": "Player not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Player not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/players/{id}/answers": {
            "delete": {
                "tags": [
                    "Players"
                ],
                "summary": "Reset a player's answers",
                "description": "Reset the number of answers of a player to 0",
                "operationId": "resetAnswers",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The ID of the player",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful reset of player's answers",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/Player"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Player not found"
                    }
                }
            }
        },
        "/api/user/register": {
            "post": {
                "tags": [
                    "User"
                ],
                "summary": "Register a new user",
                "operationId": "d03ee3a44bdd6f0025efd14c5c76b5ae",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "name": {
                                        "description": "Name of the user",
                                        "type": "string",
                                        "maxLength": 255
                                    },
                                    "email": {
                                        "description": "Email of the user",
                                        "type": "string",
                                        "format": "email",
                                        "maxLength": 255
                                    },
                                    "password": {
                                        "description": "Password of the user",
                                        "type": "string",
                                        "minLength": 8
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Successfully registered user",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "id": {
                                            "description": "ID of the registered user",
                                            "type": "integer"
                                        },
                                        "name": {
                                            "description": "Name of the registered user",
                                            "type": "string"
                                        },
                                        "email": {
                                            "description": "Email of the registered user",
                                            "type": "string",
                                            "format": "email"
                                        },
                                        "message": {
                                            "description": "Success message",
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "The given data was invalid."
                                        },
                                        "errors": {
                                            "type": "object",
                                            "additionalProperties": {
                                                "type": "array",
                                                "items": {
                                                    "type": "string"
                                                }
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        }
    },
    "components": {
        "schemas": {
            "Player": {
                "title": "Player",
                "description": "A player object",
                "required": [
                    "id",
                    "name",
                    "answers",
                    "points"
                ],
                "properties": {
                    "id": {
                        "description": "The user's ID",
                        "type": "integer"
                    },
                    "name": {
                        "description": "The user's name",
                        "type": "string",
                        "example": "John"
                    },
                    "answers": {
                        "description": "Desc. answers",
                        "type": "integer",
                        "example": 1
                    },
                    "points": {
                        "description": "Desc. points",
                        "type": "integer",
                        "example": 1
                    }
                },
                "type": "object"
            }
        }
    }
}